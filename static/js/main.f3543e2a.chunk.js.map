{"version":3,"sources":["Store.js","components/Loading.js","helpers/layouts.js","router.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","search_bar_expanded","display_search_result_dropdown","search_term","selected_user_messages","Context","React","createContext","Store","children","useState","state","setState","Provider","value","Loading","pastDelay","DynamicLayoutRouter","Component","component","Layout","layout","rest","render","props","Feed","Loadable","loader","loading","isLoading","Messages","Communities","MainLayout","MessagesLayout","CommunitiesLayout","Router","exact","name","path","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","preloadReady","ReactDOM","Fragment","document","getElementById"],"mappings":"qKAEMA,EAAe,CACjBC,qBAAqB,EACrBC,gCAAgC,EAChCC,YAAa,GACbC,uBAAwB,IAGfC,EAAUC,IAAMC,gBASdC,IAPD,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACFC,mBAASV,GADP,mBACrBW,EADqB,KACdC,EADc,KAG5B,OACI,cAACP,EAAQQ,SAAT,CAAkBC,MAAO,CAACH,EAAOC,GAAjC,SAA8CH,M,gICLvCM,EARC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACf,OACI,8BACKA,EAAY,4CAAsB,Q,uBCHlCC,EAAsB,SAAC,GAAqD,IAAzCC,EAAwC,EAAnDC,UAA8BC,EAAqB,EAA7BC,OAAmBC,EAAU,sCACpF,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACX,cAACJ,EAAD,UAAQ,cAACF,EAAD,eAAeI,W,gBCA3BG,EAAOC,IAAS,CACpBC,OAAQ,kBAAM,mEACdC,QAAS,qBAAGC,WAA6B,cAAC,EAAD,OAGrCC,EAAWJ,IAAS,CACxBC,OAAQ,kBAAM,oEACdC,QAAS,qBAAGC,WAA6B,cAAC,EAAD,OAGrCE,EAAcL,IAAS,CAC3BC,OAAQ,kBAAM,mEACdC,QAAS,qBAAGC,WAA6B,cAAC,EAAD,OAErCG,EAAaN,IAAS,CAC1BC,OAAQ,kBAAM,mEACdC,QAAS,qBAAGC,WAA6B,cAAC,EAAD,OAGrCI,EAAiBP,IAAS,CAC9BC,OAAQ,kBAAM,2EACdC,QAAS,qBAAGC,WAA6B,cAAC,EAAD,OAGrCK,EAAoBR,IAAS,CACjCC,OAAQ,kBAAM,mEACdC,QAAS,qBAAGC,WAA6B,cAAC,EAAD,OAiB5BM,MAbf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAsBC,OAAK,EAACC,KAAK,OAAOC,KAAK,QAAQjB,OAAQW,EAAYb,UAAWM,IACpF,cAAC,EAAD,CAAsBW,OAAK,EAACC,KAAK,WAAWC,KAAK,YAAYjB,OAAQY,EAAgBd,UAAWW,IAChG,cAAC,EAAD,CAAsBM,OAAK,EAACC,KAAK,cAAcC,KAAK,eAAejB,OAAQa,EAAmBf,UAAWY,IAEzG,cAAC,IAAD,CAAOR,OAAQ,kBAAM,cAAC,IAAD,CAAUgB,GAAG,iB,gBCxBzBC,EAdH,WACV,OACE,cAAChC,EAAA,EAAD,UACE,cAAC,gBAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,aCAGiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdhB,IAASwB,eAAeN,MAAK,WAC3BO,IAAS5B,OACP,cAAC,IAAM6B,SAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,YAO5Bb,M","file":"static/js/main.f3543e2a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst initialState = {\n    search_bar_expanded: false,\n    display_search_result_dropdown: false,\n    search_term: \"\",\n    selected_user_messages: \"\",\n}\n\nexport const Context = React.createContext();\n\nconst Store = ({ children }) => {\n    const [state, setState] = useState(initialState);\n\n    return (\n        <Context.Provider value={[state, setState]} >{children}</Context.Provider>\n    )\n}\nexport default Store","import React from 'react'\n\nconst Loading = ({ pastDelay }) => {\n    return (\n        <div>\n            {pastDelay ? <h3>Loading...</h3> : null}\n        </div>\n    )\n}\n\nexport default Loading\n","import { Route } from \"react-router-dom\"\n\nexport const DynamicLayoutRouter = ({component: Component, layout: Layout, ...rest}) => {\n    return (\n      <Route \n        {...rest} \n        render={props => (\n          <Layout><Component {...rest} ></Component></Layout>\n        )} \n      >\n\n      </Route>\n    )\n  }","import Loading from 'src/components/Loading';\nimport React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { DynamicLayoutRouter } from 'src/helpers/layouts';\nimport Loadable from 'react-loadable';\n\n\nconst Feed = Loadable({\n  loader: () => import('src/pages/Feed' /* webpackChunkName: \"Feed\" */),\n  loading: ({ isLoading }) => isLoading && <Loading />,\n});\n\nconst Messages = Loadable({\n  loader: () => import('src/pages/Messages' /* webpackChunkName: \"Messages\" */),\n  loading: ({ isLoading }) => isLoading && <Loading />,\n});\n\nconst Communities = Loadable({\n  loader: () => import('src/pages/Communities' /* webpackChunkName: \"Communities\" */),\n  loading: ({ isLoading }) => isLoading && <Loading />,\n});\nconst MainLayout = Loadable({\n  loader: () => import('src/layouts/MainLayout' /* webpackChunkName: \"MainLayout\" */),\n  loading: ({ isLoading }) => isLoading && <Loading />,\n});\n\nconst MessagesLayout = Loadable({\n  loader: () => import('src/layouts/MessagesLayout' /* webpackChunkName: \"MessagesLayout\" */),\n  loading: ({ isLoading }) => isLoading && <Loading />,\n});\n\nconst CommunitiesLayout = Loadable({\n  loader: () => import('src/layouts/CommunitiesLayout' /* webpackChunkName: \"CommunitiesLayout\" */),\n  loading: ({ isLoading }) => isLoading && <Loading />,\n});\n\n\nfunction Router() {\n  return (\n    <Switch>\n      <DynamicLayoutRouter  exact name=\"feed\" path='/feed' layout={MainLayout} component={Feed}></DynamicLayoutRouter>\n      <DynamicLayoutRouter  exact name=\"messages\" path='/messages' layout={MessagesLayout} component={Messages}></DynamicLayoutRouter>\n      <DynamicLayoutRouter  exact name=\"communities\" path='/communities' layout={CommunitiesLayout} component={Communities}></DynamicLayoutRouter>\n      \n      <Route render={() => <Redirect to=\"/feed\" />} />\n\n    </Switch>\n  )\n}\n\nexport default Router\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom'\nimport Store from './Store'\nimport Router from './router'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { ErrorBoundary } from 'react-error-boundary'\nconst App = () => {\n  return (\n    <Store>\n      <ErrorBoundary>\n        <HelmetProvider>\n          <HashRouter >\n            <Router />\n          </HashRouter>\n        </HelmetProvider>\n      </ErrorBoundary>\n    </Store>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Loadable from 'react-loadable';\n\nLoadable.preloadReady().then(() => {\n  ReactDOM.render(\n    <React.Fragment>\n      <App />\n    </React.Fragment>,\n    document.getElementById('root')\n  );\n})\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}