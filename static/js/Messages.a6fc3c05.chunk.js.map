{"version":3,"sources":["components/Messages/ReplyInput.js","components/Messages/ChatExchange.js","components/Messages/SelectedMessageTopPreviewBar.js","pages/Messages.js","components/HtmlTitle.js","helpers/seo.js"],"names":["Form","styled","form","ReplyInput","placeholder","ChatExchange","chat","chat_exchange","map","item","index","MessagePreviewItem","alignItems","imageSize","SelectedMessageTopPreviewBar","id","image","profile_image","name","verified","address","borderSide","hoverable","settings","cursorPointer","Messages","HtmlTitle","metaTags","style","height","title","meta_tags","meta","content","page"],"mappings":"0KAUMA,EAAOC,IAAOC,KAAV,iZAkBKC,EAzBI,WACf,OACI,cAACH,EAAD,UACI,uBAAOI,YAAY,4B,mCCMhBC,EATM,WACjB,IAAMC,EAAOC,IAAcC,KAAI,SAACC,EAAMC,GAAP,OAAiB,cAACC,EAAA,EAAD,aAAoBC,WAAW,aAAaC,UAAU,MAAqBJ,GAAXC,MAChH,OACI,mCACKJ,K,iBCcEQ,EAjBsB,WACjC,OACI,cAAC,IAAD,CACIC,GAAI,EACJC,MAAOC,IACPC,KAAK,cACLC,UAAU,EACVC,QAAQ,SACRC,WAAW,SACXC,WAAW,EACXC,UAAQ,EACRC,eAAe,EACfX,UAAU,Q,gBCWPY,UAhBE,WACb,OACI,qCACI,cAACC,EAAA,EAAD,eAAeC,YAAS,cAExB,cAAC,EAAD,IAEA,cAAC,IAAD,CAAgBC,MAAO,CAAEC,OAAQ,aAAjC,SACI,cAAC,EAAD,MAGJ,cAAC,EAAD,S,gCCtBZ,wBAmBeH,IAfG,SAAC,GAAkB,IAAjBI,EAAgB,EAAhBA,MAEVC,EAF0B,EAAVC,KAECxB,KAAI,SAACC,EAAMC,GAAP,OAAiB,sBAAkBQ,KAAMT,EAAKS,KAAMe,QAASxB,EAAKwB,SAAtCvB,MAEvD,OACI,eAAC,IAAD,WACI,kCAAQoB,EAAR,cACCC,O,gCCXN,SAASJ,EAASO,GACrB,IAAIF,EAAO,GACX,OAAOE,GACH,IAAK,OACDF,EAAO,CACHF,MAAO,OACPE,KAAM,CACF,CACId,KAAM,cACNe,QAAS,qCAEb,CACIf,KAAM,WACNe,QAAS,2BAIrB,MACJ,IAAK,cACDD,EAAO,CACHF,MAAO,cACPE,KAAM,CACF,CACId,KAAM,cACNe,QAAS,oDAEb,CACIf,KAAM,WACNe,QAAS,2BAIrB,MACJ,IAAK,WACDD,EAAO,CACHF,MAAO,WACPE,KAAM,CACF,CACId,KAAM,cACNe,QAAS,yCAEb,CACIf,KAAM,WACNe,QAAS,2BAS7B,OAAOD,EApDX","file":"static/js/Messages.a6fc3c05.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst ReplyInput = () => {\n    return (\n        <Form>\n            <input placeholder=\"Reply to flippen.eth\" />\n        </Form>\n    )\n}\nconst Form = styled.form`\n        margin: 1rem 1.25rem;\n    input {\n        /* padding: 1rem .5; */\n        background: #EAECEE;\n        border: none;\n        width: 38.75rem;\n        height: 1.25rem;\n        padding: 0.938rem 1.25rem;\n        display: block;\n        margin: 0 auto;\n        font-weight: 600;\n        line-height: 1.173rem;\n        /* color: #B6BDC4; */\n    }\n    \n\n`\nexport default ReplyInput\n","import React from 'react'\nimport MessagePreviewItem from 'src/components/Sidebars/Messages/MessagePreviewItem';\nimport {chat_exchange} from 'src/data/messages'\nconst ChatExchange = () => {\n    const chat = chat_exchange.map((item, index) => <MessagePreviewItem alignItems=\"flex-start\" imageSize=\"md\" key={index} {...item} />)\n    return (\n        <>\n            {chat}\n        </>\n    )\n}\n\nexport default ChatExchange\n","import React from 'react'\nimport { MessagePreviewItem } from 'src/components/Sidebars/Messages';\nimport profile_image from 'src/assets/feed_post_profile.png'\n\nconst SelectedMessageTopPreviewBar = () => {\n    return (\n        <MessagePreviewItem \n            id={2}\n            image={profile_image}\n            name=\"flippen.eth\"\n            verified={true}\n            address=\"0xPras\"\n            borderSide=\"bottom\"\n            hoverable={false}\n            settings\n            cursorPointer={false}\n            imageSize=\"md\"\n        />\n    )\n}\n\nexport default SelectedMessageTopPreviewBar\n","// import { SelectedMessagePreviewItem } from 'src/components/Messages'\n\nimport React from 'react'\nimport ReplyInput from 'src/components/Messages/ReplyInput'\nimport SimpleBarReact from \"simplebar-react\";\nimport \"simplebar/src/simplebar.css\";\nimport ChatExchange from 'src/components/Messages/ChatExchange';\nimport SelectedMessageTopPreviewBar from '../components/Messages/SelectedMessageTopPreviewBar';\nimport HtmlTitle from 'src/components/HtmlTitle';\nimport { metaTags } from 'src/helpers/seo';\n\nconst Messages = () => {\n    return (\n        <>\n            <HtmlTitle {...metaTags('messages')} />\n            \n            <SelectedMessageTopPreviewBar />\n            \n            <SimpleBarReact style={{ height: '42.125rem' }}>\n                <ChatExchange />\n            </SimpleBarReact>\n            \n            <ReplyInput />\n        </>\n    )\n}\n\nexport default Messages\n","import React from 'react'\nimport { Helmet } from 'react-helmet-async'\nimport {PropTypes} from 'prop-types'\n\nconst HtmlTitle = ({title,meta}) => {\n    \n    const meta_tags = meta.map((item, index) => <meta key={index} name={item.name} content={item.content}  />)\n\n    return (\n        <Helmet>\n            <title>{title} - 0xPPL</title>\n            {meta_tags}\n        </Helmet>\n    )\n}\nHtmlTitle.propTypes = {\n    title: PropTypes.string,\n    meta: PropTypes.array,\n}\nexport default HtmlTitle\n","export function metaTags(page) {\n    let meta = {};\n    switch(page) {\n        case 'feed':\n            meta = {\n                title: 'Feed',\n                meta: [\n                    {\n                        name: \"description\",\n                        content: \"A good description about the Feed\",\n                    },\n                    {\n                        name: \"keywords\",\n                        content: \"feed, messages, other\",\n                    },   \n                ]\n            }\n            break;\n        case 'communities':\n            meta = {\n                title: 'Communities',\n                meta: [\n                    {\n                        name: \"description\",\n                        content: \"A good description about the communities section\",\n                    },\n                    {\n                        name: \"keywords\",\n                        content: \"feed, messages, other\",\n                    },   \n                ]\n            }\n            break;\n        case 'messages':\n            meta = {\n                title: 'Messages',\n                meta: [\n                    {\n                        name: \"description\",\n                        content: \"A good description about the messages\",\n                    },\n                    {\n                        name: \"keywords\",\n                        content: \"feed, messages, other\",\n                    },   \n                ]\n            }\n            break;\n\n        default:\n            break;\n    }\n    return meta;\n\n}"],"sourceRoot":""}